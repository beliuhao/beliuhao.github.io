{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/2020-03-27-first-post/","result":{"data":{"site":{"siteMetadata":{"title":"Hao Liu","social":[{"name":"Github","url":"https://github.com/beliuhao"},{"name":"Twitter","url":"https://twitter.com/beliuhao"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"69cd38cc-ed62-5ef0-8d58-e8949af3c5b0","excerpt":"Hello! This is the first test post for  Coderlog . Markdown Syntax 1. Headers H1 H2 H3 H4 H5 H6 Alternatively, for H1 and H2, an underlineâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"First Post\",\n  \"date\": \"2020-03-27T00:00:00.000Z\",\n  \"author\": \"Herman\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hello! This is the first test post for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Coderlog\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"title\\\": \\\"The Zen of Python\\\"\\n  \\\"content\\\": [\\n    \\\"Beautiful is better than ugly.\\\",\\n    \\\"Explicit is better than implicit.\\\",\\n    \\\"Simple is better than complex.\\\",\\n    \\\"Complex is better than complicated.\\\",\\n    \\\"Flat is better than nested.\\\",\\n    \\\"Sparse is better than dense.\\\",\\n    \\\"Readability counts.\\\",\\n    \\\"Special cases aren't special enough to break the rules.\\\",\\n    \\\"Although practicality beats purity.\\\",\\n    \\\"Errors should never pass silently.\\\",\\n    \\\"Unless explicitly silenced.\\\",\\n    \\\"In the face of ambiguity, refuse the temptation to guess.\\\",\\n    \\\"There should be one-- and preferably only one --obvious way to do it.\\\",\\n    \\\"Although that way may not be obvious at first unless you're Dutch.\\\",\\n    \\\"Now is better than never.\\\",\\n    \\\"Although never is often better than *right* now.\\\",\\n    \\\"If the implementation is hard to explain, it's a bad idea.\\\",\\n    \\\"If the implementation is easy to explain, it may be a good idea.\\\",\\n    \\\"Namespaces are one honking great idea -- let's do more of those!\\\"\\n  ]\\n}\\n\")), mdx(\"h2\", null, \"Markdown Syntax\"), mdx(\"h3\", null, \"1. Headers\"), mdx(\"h1\", null, \"H1\"), mdx(\"h2\", null, \"H2\"), mdx(\"h3\", null, \"H3\"), mdx(\"h4\", null, \"H4\"), mdx(\"h5\", null, \"H5\"), mdx(\"h6\", null, \"H6\"), mdx(\"p\", null, \"Alternatively, for H1 and H2, an underline-ish style:\"), mdx(\"h1\", null, \"Alt-H1\"), mdx(\"h2\", null, \"Alt-H2\"), mdx(\"h3\", null, \"2.Emphasis\"), mdx(\"p\", null, \"Emphasis, aka italics, with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"asterisks\"), \" or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"underscores\"), \".\"), mdx(\"p\", null, \"Strong emphasis, aka bold, with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asterisks\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"underscores\"), \".\"), mdx(\"p\", null, \"Combined emphasis with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"asterisks and \", mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"underscores\")), \".\"), mdx(\"p\", null, \"Strikethrough uses two tildes. \", mdx(\"del\", {\n    parentName: \"p\"\n  }, \"Scratch this.\")), mdx(\"h3\", null, \"3.Lists\"), mdx(\"p\", null, \"(In this example, leading and trailing spaces are shown with with dots: \\u22C5)\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"First ordered list item\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Another item\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unordered sub-list.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Actual numbers don't matter, just that it's a number\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Ordered sub-list\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"And another item.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unordered list can use asterisks\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or minuses\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or pluses\")), mdx(\"h3\", null, \"4.Links\"), mdx(\"p\", null, \"There are two ways to create links.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.google.com\"\n  }, \"I'm an inline-style link\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.google.com\",\n    \"title\": \"Google's Homepage\"\n  }, \"I'm an inline-style link with title\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.mozilla.org\"\n  }, \"I'm a reference-style link\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://slashdot.org\"\n  }, \"You can use numbers for reference-style link definitions\")), mdx(\"p\", null, \"Or leave it empty and use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.reddit.com\"\n  }, \"link text itself\"), \".\"), mdx(\"p\", null, \"URLs and URLs in angle brackets will automatically get turned into links.\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.example.com\"\n  }, \"http://www.example.com\"), \" or \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.example.com\"\n  }, \"http://www.example.com\"), \" and sometimes\\nexample.com (but not on Github, for example).\"), mdx(\"p\", null, \"Some text to show that the reference links can follow later.\"), mdx(\"h3\", null, \"5.Images\"), mdx(\"p\", null, \"Here's our logo (hover to see the title text):\"), mdx(\"p\", null, \"Inline-style:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png\",\n    \"alt\": \"alt text\",\n    \"title\": \"Logo Title Text 1\"\n  })), mdx(\"p\", null, \"Reference-style:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png\",\n    \"alt\": \"alt text\",\n    \"title\": \"Logo Title Text 2\"\n  })), mdx(\"h3\", null, \"6.Code and Syntax Highlighting\"), mdx(\"p\", null, \"Inline \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"code\"), \" has \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"back-ticks around\"), \" it.\"), mdx(\"p\", null, \"Blocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks -- they're easier and only they support syntax highlighting.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"var s = \\\"JavaScript syntax highlighting\\\"\\nalert(s)\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"s = \\\"Python syntax highlighting\\\"\\nprint s\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"No language indicated, so no syntax highlighting.\\nBut let's throw in a <b>tag</b>.\\n\")), mdx(\"hr\", null), mdx(\"h3\", null, \"7.Tables\"), mdx(\"p\", null, \"Tables aren't part of the core Markdown spec, but they are part of GFM and Markdown Here supports them. They are an easy way of adding tables to your email -- a task that would otherwise require copy-pasting from another application.\"), mdx(\"p\", null, \"Colons can be used to align columns.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Tables\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Are\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"right\"\n  }, \"Cool\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"col 3 is\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"right-aligned\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"right\"\n  }, \"$1600\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"col 2 is\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"centered\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"right\"\n  }, \"$12\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"zebra stripes\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"are neat\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"right\"\n  }, \"$1\")))), mdx(\"p\", null, \"There must be at least 3 dashes separating each header cell.\\nThe outer pipes (|) are optional, and you don't need to make the\\nraw Markdown line up prettily. You can also use inline Markdown.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Markdown\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Less\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Pretty\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"em\", {\n    parentName: \"td\"\n  }, \"Still\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"renders\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"nicely\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"3\")))), mdx(\"h3\", null, \"8.Blockquotes\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Blockquotes are very handy in email to emulate reply text.\\nThis line is part of the same quote.\")), mdx(\"h3\", null, \"9.Quote break.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"put\"), \" \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Markdown\"), \" into a blockquote.\\nBlockquotes are very handy in email to emulate reply text. This line is part of the same quote.\")), mdx(\"h3\", null, \"10.Definition list\"), mdx(\"dl\", null, mdx(\"dt\", null, \"Definition list\"), mdx(\"dd\", null, \"Is something people use sometimes.\"), mdx(\"dt\", null, \"Markdown in HTML\"), mdx(\"dd\", null, \"Does *not* work **very** well. Use HTML \", mdx(\"em\", null, \"tags\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/2020-03-27-first-post/","title":"First Post","tags":[],"keywords":[],"date":"March 27, 2020","image":null,"imageAlt":null,"socialImage":null},"previous":null,"next":{"__typename":"MdxBlogPost","id":"24f7cbfb-25c7-5795-a094-f14039a07536","excerpt":"Hello! Gatsby.","slug":"/2021-03-26-hello-gatsby/","title":"Hello Gatsby","date":"March 26, 2021"}},"pageContext":{"id":"69cd38cc-ed62-5ef0-8d58-e8949af3c5b0","nextId":"24f7cbfb-25c7-5795-a094-f14039a07536"}},"staticQueryHashes":["2744905544","386998304","4198970465","764694655"]}