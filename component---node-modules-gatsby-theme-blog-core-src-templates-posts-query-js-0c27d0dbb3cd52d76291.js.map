{"version":3,"sources":["webpack:///./src/gatsby-theme-blog/components/home-footer.js","webpack:///./src/gatsby-theme-blog/components/post-link.js","webpack:///./node_modules/gatsby-theme-blog/src/components/post-list.js","webpack:///./node_modules/gatsby-theme-blog/src/components/posts.js","webpack:///./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack:///./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js","webpack:///./node_modules/gatsby-theme-blog/src/components/seo.js"],"names":["socialLinks","css","mt","mb","pt","Date","key","platform","url","href","target","rel","arr","title","slug","date","excerpt","tags","keywords","trimedExcerpt","colorPalette","sx","as","textDecoration","to","tag","style","background","num","Math","console","borderRadius","padding","margin","PostList","posts","map","node","Posts","location","siteTitle","PostsPage","data","site","allBlogPost","edges","siteMetadata","social","SEO","description","lang","meta","imageSource","imageAlt","useStaticQuery","metaDescription","image","siteUrl","imageAltText","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps"],"mappings":"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","file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-0c27d0dbb3cd52d76291.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Styled, css } from \"theme-ui\"\n\nconst Footer = ({ socialLinks }) => (\n  <>\n    <Styled.hr\n      css={css({\n        mt: 5,\n        mb: -4,\n      })}\n    />\n    <footer\n      css={css({\n        mt: 4,\n        pt: 3,\n      })}\n    >\n      Â© {new Date().getFullYear()}, Contact me via\n      {`   `}\n      {socialLinks\n        ? socialLinks.map((platform, i, arr) => (\n            <Fragment key={platform.url}>\n              <Styled.a\n                href={platform.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {platform.name}\n              </Styled.a>\n              {arr.length - 1 !== i && (\n                <Fragment>\n                  {` `}&bull;{` `}\n                </Fragment>\n              )}\n            </Fragment>\n          ))\n        : null}\n    </footer>\n  </>\n)\nexport default Footer\n","/** @jsx jsx */\nimport { Fragment } from \"react\"\nimport { Styled, jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ title, slug, date, excerpt, keywords, tags }) => {\n  const trimedExcerpt = excerpt.split(\".\").shift() + \"...\"\n  const colorPalette = [\n    \"#a8d8ea\",\n    \"#aa96da\",\n    \"#f08a5d\",\n    \"#b83b5e\",\n    \"#f38181\",\n    \"#08d9d6\",\n    \"#ff2e63\",\n    \"#3fc1c9\",\n    \"#fc5185\",\n    \"#93329e\",\n    \"#ff005c\",\n    \"#ffbe0f\",\n  ]\n  const randomColorPicker = () => {\n    let num = Math.floor(Math.random() * (12 - 0)) + 0\n    console.log(num, colorPalette[num])\n    return colorPalette[num]\n  }\n  return (\n    <div>\n      <Styled.h2\n        sx={{\n          mb: 1,\n        }}\n      >\n        <Styled.a\n          as={Link}\n          sx={{\n            textDecoration: `none`,\n          }}\n          to={slug}\n        >\n          {title || slug}\n        </Styled.a>\n      </Styled.h2>\n      <small>{date}</small>\n      {` `}\n      {tags\n        ? tags.map((tag, i, arr) => (\n            <Fragment key={tag}>\n              <code\n                style={{\n                  background: randomColorPicker(),\n                  borderRadius: \"10px\",\n                  padding: \"2px 8px 4px 8px\",\n                  margin: \"0px 2px\",\n                }}\n              >\n                #{tag}\n              </code>\n              {arr.length - 1 !== i && (\n                <Fragment>\n                  {` `} {` `}\n                </Fragment>\n              )}\n            </Fragment>\n          ))\n        : null}\n      <Styled.p>{trimedExcerpt}</Styled.p>\n    </div>\n  )\n}\n\nexport default PostLink\n","import React from \"react\"\n\nimport PostLink from \"./post-link\"\n\nconst PostList = ({ posts }) => (\n  <>\n    {posts.map(({ node }) => (\n      <PostLink key={node.slug} {...node} />\n    ))}\n  </>\n)\n\nexport default PostList\n","import React from \"react\"\n\nimport Layout from \"./layout\"\nimport SEO from \"./seo\"\nimport Footer from \"./home-footer\"\nimport PostList from \"./post-list\"\n\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\n  <Layout location={location} title={siteTitle}>\n    <SEO title=\"Home\" />\n    <main>\n      <PostList posts={posts} />\n    </main>\n    <Footer socialLinks={socialLinks} />\n  </Layout>\n)\n\nexport default Posts\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(sort: { fields: [date, title], order: DESC }, limit: 1000) {\n      edges {\n        node {\n          id\n          excerpt\n          slug\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Posts from \"../../components/posts\"\n\nexport default ({ location, data }) => {\n  const { site, allBlogPost } = data\n  return (\n    <Posts\n      location={location}\n      posts={allBlogPost.edges}\n      siteTitle={site.siteMetadata.title}\n      socialLinks={site.siteMetadata.social}\n    />\n  )\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords = [],\n  title,\n  imageSource,\n  imageAlt,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const image = imageSource\n    ? `${site.siteMetadata.siteUrl}${imageSource}`\n    : null\n  const imageAltText = imageAlt || metaDescription\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: `og:image`,\n          content: image,\n        },\n        {\n          name: `og:image:alt`,\n          content: imageAltText,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:image`,\n          content: image,\n        },\n        {\n          name: `twitter:image:alt`,\n          content: imageAltText,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  imageSource: PropTypes.string,\n}\n\nexport default SEO\n"],"sourceRoot":""}